{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/kukreja/Projects/Freelance/injiri-ecommerce/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Layout from '../components/layouts/Layout';\nimport { useQuery } from '@apollo/react-hooks';\nimport JOBS_QUERY from '../graphql/jobs.query';\nimport PRODUCTS_QUERY from \"../graphql/products.query\";\nimport Hero from '../components/home/Hero'; // const Home = () => {\n//   // Create a query hook\n//   // const { data, loading, error } = useQuery(JOBS_QUERY);\n//   const { data, loading, error } = useQuery(PRODUCTS_QUERY);\n//   if (loading) {\n//     return <p>Loading...</p>;\n//   }\n//   if (error) {\n//     return <p>Error: {JSON.stringify(error)}</p>;\n//   }\n//   return (\n//     <div>\n//       <Head>\n//         <title>Home</title>\n//         <link rel=\"icon\" href=\"/favicon.ico\" />\n//       </Head>\n//       <ul>\n//         {data.products.nodes.map(job => {\n//           return <li key={`job__${job.id}`}>{job.name}</li>;\n//         })}\n//       </ul>\n//       {/* <ul>\n//         {data1.jobs.map(job => {\n//           return <li key={`job__${job.id}`}>{job.title}</li>;\n//         })}\n//       </ul> */}\n//     </div>\n//   );\n// };\n// export default Home;\n\nconst Index = props => {\n  const {\n    products,\n    featuredProducts\n  } = props;\n  console.log(featuredProducts);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(PRODUCTS_QUERY);\n\n  if (loading) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Error: \", _JSON$stringify(error));\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Home\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), __jsx(Hero, {\n    products: data.products.nodes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(NewProducts, {\n    products: data.products.nodes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n}; // Index.getInitialProps = async () => {\n// \t// const result = await client.query({\n// \t// \tquery: PRODUCTS_QUERY\n// \t// });\n// \t// const featuredResult = await client.query({\n// \t// \tquery: FEATURED_QUERY\n// \t// });\n//   const { data, loading, error } = useQuery(PRODUCTS_QUERY);\n// \treturn {\n// \t\tproducts: data.products.nodes\n// \t}\n// };\n\n\nexport default Index;","map":{"version":3,"sources":["/Users/kukreja/Projects/Freelance/injiri-ecommerce/pages/index.js"],"names":["React","Head","Layout","useQuery","JOBS_QUERY","PRODUCTS_QUERY","Hero","Index","props","products","featuredProducts","console","log","data","loading","error","nodes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,IAAP,MAAiB,yBAAjB,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,KAAK,GAAKC,KAAF,IAAa;AAE1B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAiCF,KAAvC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AACC,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BZ,QAAQ,CAACE,cAAD,CAAzC;;AACE,MAAIS,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,gBAAeA,KAAf,CAAX,CAAP;AACD;;AAEJ,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADJ,EAKC,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEF,IAAI,CAACJ,QAAL,CAAcO,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,EAQC,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAGH,IAAI,CAACJ,QAAL,CAAcO,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,CADD;AAYA,CAzBD,C,CA2BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport Layout from '../components/layouts/Layout';\nimport { useQuery } from '@apollo/react-hooks';\nimport JOBS_QUERY from '../graphql/jobs.query';\nimport PRODUCTS_QUERY from \"../graphql/products.query\";\nimport Hero from '../components/home/Hero';\n// const Home = () => {\n//   // Create a query hook\n//   // const { data, loading, error } = useQuery(JOBS_QUERY);\n\n//   const { data, loading, error } = useQuery(PRODUCTS_QUERY);\n//   if (loading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   if (error) {\n//     return <p>Error: {JSON.stringify(error)}</p>;\n//   }\n\n//   return (\n//     <div>\n//       <Head>\n//         <title>Home</title>\n//         <link rel=\"icon\" href=\"/favicon.ico\" />\n//       </Head>\n//       <ul>\n//         {data.products.nodes.map(job => {\n//           return <li key={`job__${job.id}`}>{job.name}</li>;\n//         })}\n//       </ul>\n//       {/* <ul>\n//         {data1.jobs.map(job => {\n//           return <li key={`job__${job.id}`}>{job.title}</li>;\n//         })}\n//       </ul> */}\n//     </div>\n//   );\n// };\n\n// export default Home;\n\nconst Index = ( props ) => {\n\n\tconst { products, featuredProducts } = props;\n\tconsole.log(featuredProducts);\n  const { data, loading, error } = useQuery(PRODUCTS_QUERY);\n    if (loading) {\n      return <p>Loading...</p>;\n    }\n\n    if (error) {\n      return <p>Error: {JSON.stringify(error)}</p>;\n    }\n\n\treturn (\n\t\t<Layout>\n      <Head>\n        <title>Home</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\t\t\t<Hero products={data.products.nodes}/>\n\t\t\t{/*<Categories/>*/}\n\n\t\t\t<NewProducts products={ data.products.nodes } />\n\t\t</Layout>\n\t);\n};\n\n// Index.getInitialProps = async () => {\n\n// \t// const result = await client.query({\n// \t// \tquery: PRODUCTS_QUERY\n// \t// });\n// \t// const featuredResult = await client.query({\n// \t// \tquery: FEATURED_QUERY\n// \t// });\n//   const { data, loading, error } = useQuery(PRODUCTS_QUERY);\n\n// \treturn {\n// \t\tproducts: data.products.nodes\n// \t}\n// };\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}