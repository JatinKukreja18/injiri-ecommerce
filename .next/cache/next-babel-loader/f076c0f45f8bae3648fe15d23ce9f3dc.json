{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kukreja/Projects/Freelance/injiri-ecommerce/components/layouts/Header.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from \"next/router\";\nimport NProgress from \"nprogress\";\nimport Nav from \"./Nav\";\n\nRouter.onRouteChangeStart = function () {\n  NProgress.start();\n};\n\nRouter.onRouteChangeComplete = function () {\n  NProgress.done();\n};\n\nRouter.onRouteChangeError = function () {\n  NProgress.done();\n};\n\nvar lastScroll = 0;\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrolled: false,\n      scrollDirection: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScroll\", function (event) {\n      var scrollTop = event.target.scrollingElement.scrollTop;\n      var direction = 'down';\n\n      if (scrollTop > lastScroll && scrollTop > 490) {\n        direction = 'down';\n      } else {\n        direction = 'up';\n      }\n\n      if (scrollTop > 100) {\n        _this.setState({\n          scrolled: true,\n          scrollDirection: direction\n        });\n      } else {\n        _this.setState({\n          scrolled: false,\n          scrollDirection: direction\n        });\n      }\n\n      lastScroll = scrollTop;\n    });\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          scrollDirection = _this$state.scrollDirection,\n          scrolled = _this$state.scrolled;\n      return __jsx(Nav, {\n        scrolled: scrolled,\n        scrollDirection: scrollDirection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\n;\nexport default Header;","map":{"version":3,"sources":["/Users/kukreja/Projects/Freelance/injiri-ecommerce/components/layouts/Header.js"],"names":["React","Router","NProgress","Nav","onRouteChangeStart","start","onRouteChangeComplete","done","onRouteChangeError","lastScroll","Header","scrolled","scrollDirection","event","scrollTop","target","scrollingElement","direction","setState","window","addEventListener","handleScroll","removeEventListener","state","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEAF,MAAM,CAACG,kBAAP,GAA4B,YAAM;AACjCF,EAAAA,SAAS,CAACG,KAAV;AACA,CAFD;;AAGAJ,MAAM,CAACK,qBAAP,GAA+B,YAAM;AACpCJ,EAAAA,SAAS,CAACK,IAAV;AACA,CAFD;;AAIAN,MAAM,CAACO,kBAAP,GAA4B,YAAM;AACjCN,EAAAA,SAAS,CAACK,IAAV;AACA,CAFD;;AAIA,IAAIE,UAAU,GAAG,CAAjB;;IACMC,M;;;;;;;;;;;;;;;;;;4DACC;AACLC,MAAAA,QAAQ,EAAE,KADL;AAELC,MAAAA,eAAe,EAAC;AAFX,K;;mEAUS,UAACC,KAAD,EAAW;AACzB,UAAIC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,gBAAb,CAA8BF,SAA9C;AACA,UAAIG,SAAS,GAAG,MAAhB;;AACA,UAAGH,SAAS,GAAGL,UAAZ,IAA0BK,SAAS,GAAG,GAAzC,EAA6C;AAC5CG,QAAAA,SAAS,GAAG,MAAZ;AACA,OAFD,MAEK;AACJA,QAAAA,SAAS,GAAG,IAAZ;AACA;;AACD,UAAGH,SAAS,GAAE,GAAd,EAAkB;AACjB,cAAKI,QAAL,CAAc;AACbP,UAAAA,QAAQ,EAAE,IADG;AAEbC,UAAAA,eAAe,EAAEK;AAFJ,SAAd;AAIA,OALD,MAKK;AACJ,cAAKC,QAAL,CAAc;AACbP,UAAAA,QAAQ,EAAE,KADG;AAEbC,UAAAA,eAAe,EAAEK;AAFJ,SAAd;AAIA;;AACDR,MAAAA,UAAU,GAAGK,SAAb;AACA,K;;;;;;;wCA1BoB;AACpBK,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,YAAvC;AACA;;;2CACsB;AACtBF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKD,YAA1C;AACA;;;6BAsBO;AAAA,wBAC2B,KAAKE,KADhC;AAAA,UACAX,eADA,eACAA,eADA;AAAA,UACgBD,QADhB,eACgBA,QADhB;AAEP,aACC,MAAC,GAAD;AAAK,QAAA,QAAQ,EAAEA,QAAf;AAAyB,QAAA,eAAe,EAAEC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAGA;;;;EArCmBZ,KAAK,CAACwB,S;;AAsC1B;AAGD,eAAed,MAAf","sourcesContent":["import React from 'react';\nimport Router from \"next/router\";\nimport NProgress from \"nprogress\";\nimport Nav from \"./Nav\";\n\nRouter.onRouteChangeStart = () => {\n\tNProgress.start();\n};\nRouter.onRouteChangeComplete = () => {\n\tNProgress.done();\n};\n\nRouter.onRouteChangeError = () => {\n\tNProgress.done();\n};\n\nlet lastScroll = 0;\nclass Header extends React.Component {\n\tstate={\n\t\tscrolled: false,\n\t\tscrollDirection:false\n\t}\n\tcomponentDidMount () {\n\t\twindow.addEventListener('scroll', this.handleScroll);\n\t}\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('scroll', this.handleScroll);\n\t}\n\thandleScroll = (event) => {\n\t\tlet scrollTop = event.target.scrollingElement.scrollTop;\n\t\tlet direction = 'down';\n\t\tif(scrollTop > lastScroll && scrollTop > 490){\n\t\t\tdirection = 'down';\n\t\t}else{\n\t\t\tdirection = 'up';\n\t\t}\n\t\tif(scrollTop> 100){\n\t\t\tthis.setState({\n\t\t\t\tscrolled: true,\n\t\t\t\tscrollDirection: direction\n\t\t\t});\n\t\t}else{\n\t\t\tthis.setState({\n\t\t\t\tscrolled: false,\n\t\t\t\tscrollDirection: direction\n\t\t\t});\n\t\t}\n\t\tlastScroll = scrollTop\n\t}\n\trender(){\n\t\tconst {scrollDirection,scrolled}= this.state\n\t\treturn(\n\t\t\t<Nav scrolled={scrolled} scrollDirection={scrollDirection}/>\n\t\t)\n\t}\n};\n\t\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}