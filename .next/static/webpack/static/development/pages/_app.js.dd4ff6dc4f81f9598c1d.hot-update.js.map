{"version":3,"file":"static/webpack/static/development/pages/_app.js.dd4ff6dc4f81f9598c1d.hot-update.js","sources":["webpack:///./util/apollo-client.js"],"sourcesContent":["import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport withApollo from 'next-with-apollo';\nimport { createHttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch';\n\n// Update the GraphQL endpoint to any instance of GraphQL that you like\nconst GRAPHQL_URL = 'http://localhost:8888/injiri';\n\nconst link = createHttpLink({\n  fetch, // Switches between unfetch & node-fetch for client & server.\n  uri: GRAPHQL_URL\n});\n\n// Export a HOC from next-with-apollo\n// Docs: https://www.npmjs.com/package/next-with-apollo\nexport default withApollo(\n  // You can get headers and ctx (context) from the callback params\n  // e.g. ({ headers, ctx, initialState })\n  ({ initialState }) =>\n    new ApolloClient({\n      link: link,\n      cache: new InMemoryCache()\n        //  rehydrate the cache using the initial data passed from the server:\n        .restore(initialState || {})\n    })\n);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAFA;AAMA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAFA;AADA;;;;A","sourceRoot":""}